name: Build GKI

on:
  workflow_dispatch:
    inputs:
      LTO:
        description: 'LTO Type'
        required: true
        default: 'thin'
        type: choice
        options:
          - 'full'
          - 'thin'
          - 'none'
      SUSFS4KSU:
        description: 'Do you want to include SUSFS4KSU?'
        required: true
        default: ''
        type: choice
        options:
          - 'Yes'
          - 'No'
      NOTE:
        description: 'Release Note'
        required: false

jobs:
  build:
    name: Build GKI Kernel
    runs-on: ubuntu-24.04

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Swap Space
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 16

    - name: Free up storage
      uses: rokibhasansagar/slimhub_actions@main

    - name: Build
      run: |
        [ -x "build.sh" ] || chmod a+x build.sh
        export LTO_TYPE="${{ github.event.inputs.LTO }}"
        if [ "${{ github.event.inputs.SUSFS4KSU }}" = "Yes" ]; then
            export USE_KSU_SUSFS=1
        fi
        if [ -n "${{ github.event.inputs.NOTE }}" ]; then
            export NOTE="${{ github.event.inputs.NOTE }}"
        fi
        ./build.sh

    - name: Check for Kernel Image and Prepare Artifacts
      run: |
        set -e
        WORK_DIR="$(pwd)"
        KERNEL_IMAGE="$WORK_DIR/path/to/kernel/image" # Adjust the path as necessary
        ZIP_NAME="kernel.zip"
        SUSFS_MODULE_ZIP="susfs_module.zip"
        BUILD_LOG="$WORK_DIR/build_log.txt"
        
        if ! [ -f "$KERNEL_IMAGE" ]; then
            echo "Build failed!" | tee "$BUILD_LOG"
        else
            # Zipping
            cd "$WORK_DIR/anykernel"
            sed -i "s/DUMMY1/$KERNEL_VERSION/g" anykernel.sh
            if [ -z "$USE_KSU_SUSFS" ]; then
                sed -i "s/DUMMY2//g" anykernel.sh
            else
                sed -i "s/DUMMY2/xSUSFS/g" anykernel.sh
            fi
            cp "$KERNEL_IMAGE" .
            zip -r9 "$ZIP_NAME" * -x LICENSE
            mv "$ZIP_NAME" "$WORK_DIR"
            cd "$WORK_DIR"
            
            if [ -n "$USE_KSU_SUSFS" ]; then
                cd "$SUSFS_MODULE"
                zip -r9 "$SUSFS_MODULE_ZIP" * -x README.md
                mv "$SUSFS_MODULE_ZIP" "$WORK_DIR"
                cd "$WORK_DIR"
            fi
        fi
      env:
        KERNEL_VERSION: ${{ github.sha }}
        SUSFS_MODULE: ${{ github.workspace }}/path/to/susfs_module # Adjust path
        SUSFS_VERSION: "1.0" # Adjust version as necessary

    - name: Upload GKI Kernel Artifact
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: GKI-Kernel
        path: ${{ github.workspace }}/kernel.zip
        retention-days: 5

    - name: Upload SUSFS Module Artifact
      if: always() && ${{ github.event.inputs.SUSFS4KSU == 'Yes' }}
      uses: actions/upload-artifact@v3
      with:
        name: SUSFS-Module
        path: ${{ github.workspace }}/susfs_module.zip
        retention-days: 5

    - name: Upload Build Log Artifact
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: Build-Log
        path: ${{ github.workspace }}/build_log.txt
        retention-days: 5
